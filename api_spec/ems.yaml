openapi: 3.0.0
info:
  title: Enquiry Management System API
  description: Spec for Enquiry Management System API
  version: 1.0.0
servers:
  - url: /api/v1.0

paths:
  /queries:
    get:
      summary: Returns all queries
      operationId: getQueries
      parameters:
        - name: offset
          in: query
          required: false
          description: The record index to start returning (e.g. 1 = second record)
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          description: The number of records to return
          schema:
            type: integer
      responses:
        '200':
          description: An array of query objects
          content:
            application/json:
              schema:
                $ref: 'schemas/queries.yaml'
        '500':
          description: Server error
    post:
      summary: Create a new query
      operationId: createQuery
      requestBody:
        $ref: '#/components/requestBodies/QueryBody'
      responses:
        '201':
          description: The created query object
          content:
            application/json:
              schema:
                $ref: 'schemas/query.yaml'
        '404':
          description: Query not found
        '500':
          description: Server error
  /queries/{id}:
    get:
      summary: Returns specific query
      operationId: getQueryById
      parameters:
        - name: id
          in: path
          description: Query ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single query object
          content:
            application/json:
              schema:
                $ref: 'schemas/query.yaml'
        '404':
          description: Query not found
        '500':
          description: Server error
    put:
      summary: Update an existing query
      operationId: updateQuery
      parameters:
        - name: id
          in: path
          description: Query ID
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/QueryBody'
      responses:
        '200':
          description: The updated query object
          content:
            application/json:
              schema:
                $ref: 'schemas/query.yaml'
        '404':
          description: Query not found
        '500':
          description: Server error
    delete:
      summary: Delete a query
      operationId: deleteQuery
      parameters:
        - name: id
          in: path
          description: Query ID
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful deletion
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Query not found
        '500':
          description: Server error
  /messages:
    get:
      summary: Returns all messages
      operationId: getMessages
      parameters:
        - name: offset
          in: query
          required: false
          description: The record index to start returning (e.g. 1 = second record)
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          description: The number of records to return
          schema:
            type: integer
      responses:
        '200':
          description: An array of message objects
          content:
            application/json:
              schema:
                $ref: 'schemas/messages.yaml'
        '500':
          description: Server error
    post:
      summary: Create a new message
      operationId: createMessage
      requestBody:
        $ref: '#/components/requestBodies/MessageBody'
      responses:
        '201':
          description: The created message object
          content:
            application/json:
              schema:
                $ref: 'schemas/message.yaml'
        '404':
          description: Message not found
        '500':
          description: Server error
  /messages/{id}:
    put:
      summary: Update an existing message
      operationId: updateMessage
      parameters:
        - name: id
          in: path
          description: Message ID
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/MessageBody'
      responses:
        '200':
          description: The updated message object
          content:
            application/json:
              schema:
                $ref: 'schemas/message.yaml'
        '404':
          description: Message not found
        '500':
          description: Server error
    delete:
      summary: Delete a message
      operationId: deleteMessage
      parameters:
        - name: id
          in: path
          description: Message ID
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful deletion
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Message not found
        '500':
          description: Server error
  /folders:
    get:
      summary: Returns all folders
      operationId: getFolders
      responses:
        '200':
          description: An array of folder objects
          content:
            application/json:
              schema:
                $ref: 'schemas/folders.yaml'
        '500':
          description: Server error
    post:
      summary: Create a new folder
      operationId: createFolder
      requestBody:
        $ref: '#/components/requestBodies/FolderBody'
      responses:
        '201':
          description: The created folder object
          content:
            application/json:
              schema:
                $ref: 'schemas/folder.yaml'
        '404':
          description: Folder not found
        '500':
          description: Server error
  /folders/{id}:
    put:
      summary: Update an existing folder
      operationId: updateFolder
      parameters:
        - name: id
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/FolderBody'
      responses:
        '200':
          description: The updated folder object
          content:
            application/json:
              schema:
                $ref: 'schemas/folder.yaml'
        '404':
          description: Folder not found
        '500':
          description: Server error
    delete:
      summary: Delete a folder
      operationId: deleteFolder
      parameters:
        - name: id
          in: path
          description: Folder ID
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful deletion
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Folder not found
        '500':
          description: Server error
  /labels:
    get:
      summary: Returns all labels
      operationId: getLabels
      responses:
        '200':
          description: An array of label objects
          content:
            application/json:
              schema:
                $ref: 'schemas/labels.yaml'
        '500':
          description: Server error
    post:
      summary: Create a new label
      operationId: createLabel
      requestBody:
        $ref: '#/components/requestBodies/LabelBody'
      responses:
        '201':
          description: The created label object
          content:
            application/json:
              schema:
                $ref: 'schemas/label.yaml'
        '404':
          description: Label not found
        '500':
          description: Server error
  /labels/{id}:
    put:
      summary: Update an existing labels
      operationId: updateLabel
      parameters:
        - name: id
          in: path
          description: Label ID
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/LabelBody'
      responses:
        '200':
          description: The updated label object
          content:
            application/json:
              schema:
                $ref: 'schemas/label.yaml'
        '404':
          description: Label not found
        '500':
          description: Server error
    delete:
      summary: Delete a label
      operationId: deleteLabel
      parameters:
        - name: id
          in: path
          description: Label ID
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful deletion
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Label not found
        '500':
          description: Server error
  /queries/{query_id}/label/{label_id}:
    post:
      summary: Create a new querylabel relationship
      operationId: createQueryLabel
      parameters:
        - name: query_id
          in: path
          description: Query ID
          required: true
          schema:
            type: integer
        - name: label_id
          in: path
          description: Label ID
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: The created querylabel object
          content:
            application/json:
              schema:
                $ref: 'schemas/querylabel.yaml'
        '500':
          description: Server error
    delete:
      summary: Delete a querylabel relationship
      operationId: deleteQueryLabel
      parameters:
        - name: query_id
          in: path
          description: Query ID
          required: true
          schema:
            type: integer
        - name: label_id
          in: path
          description: Label ID
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful deletion
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Query / Label combination not found
        '500':
          description: Server error

components:
  requestBodies:
    QueryBody:
      description: A JSON object describing a query
      required: true
      content:
        application/json:
          schema:
            $ref: 'schemas/query.yaml'
    MessageBody:
      description: A JSON object describing a message
      required: true
      content:
        application/json:
          schema:
            $ref: 'schemas/message.yaml'
    FolderBody:
      description: A JSON object describing a folder
      required: true
      content:
        application/json:
          schema:
            $ref: 'schemas/folder.yaml'
    LabelBody:
      description: A JSON object describing a label
      required: true
      content:
        application/json:
          schema:
            $ref: 'schemas/label.yaml'
    QueryLabelBody:
      description: A JSON object describing a querylabel relationship
      required: true
      content:
        application/json:
          schema:
            $ref: 'schemas/querylabel.yaml'
